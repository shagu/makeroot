#!/bin/bash

# setup default variables
START_TIME=$(date +%s)
BASE_DIR=${BASE_DIR:-$(pwd)}
BUILD_DIR=${BUILD_DIR:-build}
TARGET_DIR=${TARGET_DIR:-$BUILD_DIR/$RECIPE}
ROOTFS_DIR=${ROOTFS_DIR:-$TARGET_DIR/rootfs}
LOG_DIR=${LOG_DIR:-$TARGET_DIR/logs}
CONTAINER_BACKEND=${CONTAINER_BACKEND:-lxc}

# load user config if exists
if [ -f $BUILD_DIR/local.conf ]; then
  source $BUILD_DIR/local.conf
fi

# load recipe informations
source recipes/$RECIPE/recipe
source distros/$DISTRO

echo
echo "##"
echo "# RECIPE: $RECIPE"
echo "# DISTRO: $DISTRO"
echo "#"
echo
echo "To view the complete log, run:"
echo "  \`tail -f $BASE_DIR/$TARGET_DIR/logs/makeroot.log\`"
echo

# load build core
source core/variables
source core/helpers

# prepare target dir
mkdir -p $ROOTFS_DIR
mkdir -p $LOG_DIR

# clean old logs
rm -f $LOG_DIR/*.log

if [ ! -f $ROOTFS_DIR/bin/bash ] || [ -n "${REBUILD}" ]; then
  # prepare distro
  run do_distro
fi

# initialize the container
run do_container

# create a trap to properly clean up on exit
trap container_stop EXIT INT

# move specified files into rootfs
run do_files

# run build steps
for step in $build_steps; do
  # only run existing functions
  if declare -f $step &> /dev/null; then
    container_run $step
  fi
done

echo
echo "Build of \"$RECIPE\" completed after $(expr $(date +%s) - $START_TIME) seconds."