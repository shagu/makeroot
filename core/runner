#!/bin/bash

# setup default variables
START_TIME=$(date +%s)
BASE_DIR=${BASE_DIR:-$(pwd)}
BUILD_DIR=${BUILD_DIR:-build}
TARGET_DIR=${TARGET_DIR:-$BUILD_DIR/$RECIPE}
ROOTFS_DIR=${ROOTFS_DIR:-$TARGET_DIR/rootfs}
LOG_DIR=${LOG_DIR:-$TARGET_DIR/logs}
CONTAINER_BACKEND=${CONTAINER_BACKEND:-lxc}
RECIPE_DIRS=${RECIPE_DIRS}
BASE_RECIPE=$RECIPE
TASKS=$BASE_RECIPE
CONTAINER_STATE=0

# load user config if exists
if [ -f $BUILD_DIR/local.conf ]; then
  source $BUILD_DIR/local.conf
fi

# load recipe data
for folder in recipes/* ${RECIPE_DIRS}; do
  if [ -f $folder/$RECIPE/recipe ]; then
    LAYER=$(basename $folder)
    source $folder/$RECIPE/recipe
    break
  fi
done

# print build info
echo
echo "##"
echo -e "# RECIPE: \033[1m$RECIPE\033[0m"
echo -e "# LAYER:  \033[1m$LAYER\033[0m"
echo "#"
echo
echo "To view the complete log, run:"
echo "  \`tail -f $BASE_DIR/$TARGET_DIR/logs/makeroot.log\`"
echo

# load build core
source core/variables
source core/helpers

# prepare target dir
mkdir -p $ROOTFS_DIR

# clean old logs
rm -rf $LOG_DIR/

# create a trap to properly clean up on exit
trap container_stop EXIT INT

# load all tasks/dependencies
header "Loading Tasks"
build_depends $BASE_RECIPE

# start the build
for task in $TASKS; do
  build_recipe $task
done

# print message when done
echo -e "\n\033[1mBuild of \"$BASE_RECIPE\" completed after $(expr $(date +%s) - $START_TIME) seconds.\033[0m"